<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<aop:aspectj-autoproxy />
	
	<!-- Starts data base source configuration for JPA -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:db.properties</value>
		</property>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="persistenceUnitName" value="tstrackerPU" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<!-- Ends data base source configuration for JPA -->


	<!-- DAO'S -->
	<bean id="clienteDAO" class="com.cloudfoundry.tstracker.dao.ClienteDAOImpl" />
	<bean id="desarrolladorDAO" class="com.cloudfoundry.tstracker.dao.DesarrolladorDAOImpl" />
	<bean id="liderTecnicoDAO" class="com.cloudfoundry.tstracker.dao.LiderTecnicoDAOImpl" />
	<bean id="consultoraDAO" class="com.cloudfoundry.tstracker.dao.ConsultoraDAOImpl" />
	<bean id="proyectoDAO" class="com.cloudfoundry.tstracker.dao.ProyectoDAOImpl" />
	<bean id="reporteDAO" class="com.cloudfoundry.tstracker.dao.ReporteDAOImpl" />
	<bean id="tareaDAO" class="com.cloudfoundry.tstracker.dao.TareaDAOImpl" />
	<bean id="usuarioDAO" class="com.cloudfoundry.tstracker.dao.UsuarioDAOImpl" />
	<bean id="rolDAO" class="com.cloudfoundry.tstracker.dao.RolDAOImpl" />


	<!-- Services -->
	<bean id="clienteService"
		class="com.cloudfoundry.tstracker.service.ClienteServiceImpl">
		<property name="clienteDAO" ref="clienteDAO" />
	</bean>

	<bean id="desarrolladorService"
		class="com.cloudfoundry.tstracker.service.DesarrolladorServiceImpl">
		<property name="desarrolladorDAO" ref="desarrolladorDAO" />
	</bean>

	<bean id="liderTecnicoService"
		class="com.cloudfoundry.tstracker.service.LiderTecnicoServiceImpl">
		<property name="liderTecnicoDAO" ref="liderTecnicoDAO" />
	</bean>

	<bean id="consultoraService"
		class="com.cloudfoundry.tstracker.service.ConsultoraServiceImpl">
		<property name="consultoraDAO" ref="consultoraDAO" />
	</bean>

	<bean id="proyectoService"
		class="com.cloudfoundry.tstracker.service.ProyectoServiceImpl">
		<property name="proyectoDAO" ref="proyectoDAO" />
	</bean>

	<bean id="reporteService"
		class="com.cloudfoundry.tstracker.service.ReporteServiceImpl">
		<property name="reporteDAO" ref="reporteDAO" />
	</bean>

	<bean id="tareaService" class="com.cloudfoundry.tstracker.service.TareaServiceImpl">
		<property name="tareaDAO" ref="tareaDAO" />
	</bean>

	<bean id="usuarioService"
		class="com.cloudfoundry.tstracker.service.UsuarioServiceImpl">
		<property name="usuarioDAO" ref="usuarioDAO" />
	</bean>
	
	<bean id="authService"
		class="com.cloudfoundry.tstracker.service.AuthServiceImpl">
		<property name="usuarioDAO" ref="usuarioDAO" />
	</bean>

	<!--  SPRING SECURITY -->
  
    <security:http
        auto-config="true"
        access-decision-manager-ref="accessDecisionManager"
        access-denied-page="/accessdenied.zul">

        <!-- Todo lo que est치 abajo de "/home/" s칩lo puede ser accedido por usuarios autenticados con rol DEVELOPER -->
        <security:intercept-url
            pattern="/home/**"
            access="ROL_DEVELOPER" />
            
        <security:intercept-url 
        	pattern="/marketing/**" 
        	filters="none" />
        
        <!-- Lo que debe excluirse 
        <security:intercept-url
            pattern="/content/support/**" filters="none"/> -->

         <!-- Si entro directamente a login y me autentico correctamente,mandame a home -->
        <security:form-login
        	login-processing-url="/j_spring_security_check"
            login-page="/"
            authentication-success-handler-ref="loginSuccessHandler"
            authentication-failure-handler-ref="loginFailureHandler" />

        <security:logout 
        	logout-success-url="/" />

        <security:session-management invalid-session-url="/" />

    </security:http>
    
    <bean id="loginSuccessHandler" class="com.cloudfoundry.tstracker.web.security.LoginSuccessHandler" >
        <property name="defaultTargetUrl" value="/home" />
    </bean>

    <bean id="loginFailureHandler" class="com.cloudfoundry.tstracker.web.security.LoginFailureHander" >
        <property name="defaultFailureUrl" value="/" />
    </bean>
    
    <!-- Configura el gestor de decisiones de autenticaci칩n. -->
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <!-- Define los participantes en el proceso de autenticaci칩n: -->
        <property name="decisionVoters">
            <list>
                <ref bean="decisorDeRoles" />
                <ref bean="decisorDeAutenticacion" />
            </list>
        </property>
    </bean>    
    
    <!-- Decisor de roles, necesario para tener nombres de roles personalizados -->
    <bean id="decisorDeRoles" class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value="ROL_" />
    </bean>

    <bean id="decisorDeAutenticacion" class="org.springframework.security.access.vote.AuthenticatedVoter"/>
    
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="usuarioService">
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>
        
    <!-- 
    <bean id="passwordEncoder" 
    	class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
        <constructor-arg value="MD5" />
    </bean>    
     -->
	
	 <bean id="passwordEncoder" 
    	class="org.springframework.security.authentication.encoding.PlaintextPasswordEncoder"/>
</beans>